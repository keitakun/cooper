#!/usr/bin/env node
Object.defineProperties(String.prototype,{reset:{get:function(){return"[0m"+this.replace("[0m","")}},bold:{get:function(){return"[1m"+this.replace("[0m","")+"[0m"}},dim:{get:function(){return"[2m"+this.replace("[0m","")+"[0m"}},underscore:{get:function(){return"[4m"+this.replace("[0m","")+"[0m"}},blink:{get:function(){return"[5m"+this.replace("[0m","")+"[0m"}},reverse:{get:function(){return"[7m"+this.replace("[0m","")+"[0m"}},hidden:{get:function(){return"[8m"+this.replace("[0m","")+"[0m"}},black:{get:function(){return"[30m"+this.replace("[0m","")+"[0m"}},red:{get:function(){return"[31m"+this.replace("[0m","")+"[0m"}},green:{get:function(){return"[32m"+this.replace("[0m","")+"[0m"}},yellow:{get:function(){return"[33m"+this.replace("[0m","")+"[0m"}},blue:{get:function(){return"[34m"+this.replace("[0m","")+"[0m"}},magenta:{get:function(){return"[35m"+this.replace("[0m","")+"[0m"}},cyan:{get:function(){return"[36m"+this.replace("[0m","")+"[0m"}},white:{get:function(){return"[37m"+this.replace("[0m","")+"[0m"}},bg_black:{get:function(){return"[40m"+this.replace("[0m","")+"[0m"}},bg_red:{get:function(){return"[41m"+this.replace("[0m","")+"[0m"}},bg_green:{get:function(){return"[42m"+this.replace("[0m","")+"[0m"}},bg_yellow:{get:function(){return"[43m"+this.replace("[0m","")+"[0m"}},bg_blue:{get:function(){return"[44m"+this.replace("[0m","")+"[0m"}},bg_magenta:{get:function(){return"[45m"+this.replace("[0m","")+"[0m"}},bg_cyan:{get:function(){return"[46m"+this.replace("[0m","")+"[0m"}},bg_white:{get:function(){return"[47m"+this.replace("[0m","")+"[0m"}}});var ExecStack=function(){function ExecStack(cwd,stack,stdoutCallback,terminatedCallback,errorCallback){if(stdoutCallback===void 0){stdoutCallback=null}if(terminatedCallback===void 0){terminatedCallback=null}if(errorCallback===void 0){errorCallback=null}var _this=this;this._paramsList=[];this._running=false;this._execIndex=0;this._onStdout=function(data){if(_this._stdoutCallback)_this._stdoutCallback(data)};this._onClose=function(){_this._removeListeners();_this._execNext()};this._onError=function(){if(_this._onError)_this._errorCallback();_this._removeListeners();_this._execNext()};if(stack.length==0)throw new Error("No stacks to execute");this._cwd=cwd;this._stack=stack;this._stdoutCallback=stdoutCallback;this._terminatedCallback=terminatedCallback;this._errorCallback=errorCallback}ExecStack.prototype._execNext=function(){if(!this._running)return;if(this._execIndex>=this._stack.length){this._execIndex=0;this._running=false;this._runNext();return}var task=this._stack[this._execIndex++];var run=true;var params=this._currentParams;if(task["condition"]){var cond=task["condition"];cond=cond.replace(/\{(.*?)\}/g,"params['$1']");try{run=eval(cond)}catch(e){run=false}}if(run&&task["exec"]){var opts={};task["cwd"]=this._cwd+path.sep;if(task["cwd"])opts["cwd"]+=task["cwd"];opts["cwd"]=path.resolve(task["cwd"]);var args_1=task["args"]||[];for(var i in args_1){for(var k in params){args_1[i]=args_1[i].replace("{"+k+"}",params[k])}}this._currentTask=child_process.spawn(task["exec"],args_1,opts);this._currentTask.stdout.on("data",this._onStdout);this._currentTask.on("close",this._onClose);this._currentTask.on("error",this._onError);this._currentTask.task=task}else{this._execNext()}};ExecStack.prototype._removeListeners=function(){if(this._currentTask){this._currentTask.off("close",this._onClose);this._currentTask.off("error",this._onError);this._currentTask.stdout.off("data",this._onStdout)}};ExecStack.prototype._runNext=function(){if(this._running)return;var params;if(params=this._paramsList.shift()){this.run(params)}else{this._running=false;if(this._terminatedCallback)this._terminatedCallback()}};Object.defineProperty(ExecStack.prototype,"running",{get:function(){return this._running},enumerable:true,configurable:true});ExecStack.prototype.queue=function(paramsList){this._paramsList=[].concat(paramsList);this._runNext()};ExecStack.prototype.run=function(params){if(params===void 0){params=null}if(this._running)return;this._currentParams=params;this._running=true;this._execNext()};ExecStack.prototype.kill=function(){this._running=false;this._removeListeners();if(this._currentTask)this._currentTask.kill()};return ExecStack}();var Task=function(){function Task(name,task,terminatedCallback,errorCallback){if(terminatedCallback===void 0){terminatedCallback=null}if(errorCallback===void 0){errorCallback=null}var _this=this;this._watchStack=false;this._watchStackFiles=[];this._watchStackTimeout=-1;this._execFileChange=function(){var params=[];if(_this._watchStack){params.push({dir:_this._watchStack})}else{params=_this._watchStackFiles}if(params.length>0){if(_this._execStack){_this._execStack.queue(params)}else{var files={};var states={changed:[],removed:[]};for(var _i=0,_a=_this._watchStackFiles;_i<_a.length;_i++){var o=_a[_i];files[o["path"]]=o["type"]}for(var k in files){states[files[k]].push(k)}if(states["changed"].length>0)_this.output("Changed files:\n".yellow+states["changed"].join("\n").yellow);if(states["removed"].length>0)_this.output("Removed files:\n".red+states["removed"].join("\n").red)}}_this._watchStackFiles=[]};this._fileChange=function(e,f){var type="changed";if(!fs.existsSync(f)){type="removed"}_this._watchStackFiles.push({path:f,type:type});if(_this._watchStack){clearTimeout(_this._watchStackTimeout);_this._watchStackTimeout=setTimeout(_this._execFileChange,100)}else{_this._execFileChange()}};this._onStdout=function(data){_this.output(data.toString())};this._onClose=function(data){_this.output("Task terminated".yellow);if(_this._terminatedCallback)_this._terminatedCallback()};this._onError=function(data){_this.output("Error running task: ".red);if(_this._errorCallback)_this._errorCallback()};this._name=name;this._outputPrefix="["+this._name+"]";this._terminatedCallback=terminatedCallback;this._errorCallback=errorCallback;this._parseTask(task)}Task.prototype.output=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i]}args.unshift(this._outputPrefix.bold);console.log.apply(this,args)};Task.prototype._parseTask=function(task){var args=task["args"]||[];var opts={};var execs;if(task["exec"]){execs=[{exec:task["exec"],cwd:task["cwd"],args:task["args"]}]}else if(task["tasks"]){execs=task["tasks"]}if(execs&&execs.length){this._execStack=new ExecStack(task["_cwd"],execs,this._onStdout,this._onClose,this._onError)}if(task["watch"]||task["watchStack"]){var watch=task["watch"]||task["watchStack"];if(task["watchStack"])this._watchStack=true;if(!fs.existsSync(watch)){this.output("File/directory doesn't exist to watch: ".red+watch.bold);if(this._errorCallback)this._errorCallback();return}this.output("Watching: ".green+watch.bold);this._watch=fs.watch(watch,this._fileChange)}else{this._execStack.run()}};Object.defineProperty(Task.prototype,"name",{get:function(){return this._name},enumerable:true,configurable:true});Object.defineProperty(Task.prototype,"running",{get:function(){return this._watch||this._execStack&&this._execStack.running},enumerable:true,configurable:true});Task.prototype.kill=function(){clearTimeout(this._watchStackTimeout);if(this._watch){this._watch.close();this._watch=null}if(this._execStack){this._execStack.kill()}this.output("Task terminated".yellow)};return Task}();var fs=require("fs");var process=require("process");var child_process=require("child_process");var path=require("path");var args=process.argv.splice(2);function parseArgs(args,map){if(map===void 0){map={}}var parsed={"-":[]};var currName=null;for(var _i=0,args_2=args;_i<args_2.length;_i++){var v=args_2[_i];if(/^\-/.test(v)){currName=v.replace(/^\-+/,"");if(map[currName])currName=map[currName];if(!parsed[currName])parsed[currName]=[]}else{if(!currName){currName="-"}parsed[currName].push(v);currName=null}}return parsed}args=parseArgs(args,{t:"task"});var configFiles=["cooper.json"];var filteredConfigFiles=[];if(args["-"].length>0){configFiles=args["-"]}for(var _i=0,configFiles_1=configFiles;_i<configFiles_1.length;_i++){var cf=configFiles_1[_i];if(!fs.existsSync(cf)){console.log("Config file ".red+cf.bold+" not found".red)}else{filteredConfigFiles.push(cf)}}if(filteredConfigFiles.length==0){console.log("No config files found.\nTerminating... ".red);process.exit()}var taskFilter=[];if(args["task"]&&args["task"].length>0){taskFilter=args["task"];taskFilter=taskFilter.join(",").split(",")}var currentTasks=[];var currentConfig={};function handleClose(data){checkTasks()}function handleError(data){checkTasks()}function checkTasks(){var i=currentTasks.length;while(i-- >0){if(!currentTasks[i].running)currentTasks.splice(i,1)}if(currentTasks.length==0){console.log("All tasks terminated.".green);process.exit()}}function resetTasks(){var i=currentTasks.length;while(i-- >0){currentTasks[i].kill()}currentTasks.length=0}function reloadTasks(){resetTasks();loadTasks()}function getRunningTask(name){var i=currentTasks.length;while(i-- >0){if(currentTasks[i].name==name)return currentTasks[i]}return null}function runTask(name){var task=getRunningTask(name);if(task){console.log("Task already running: ".yellow+name.bold);return}if(!currentConfig[name]){console.log("Task not found: ".red+name.bold);return}task=new Task(name,currentConfig[name],handleClose,handleError);currentTasks.push(task)}function stopTask(name){var task=getRunningTask(name);if(!task){console.log("Task not running: ".yellow+name.bold);return}task.kill();checkTasks()}function loadTasks(){var tasks={};var c=0;configFiles.length=0;for(var _i=0,filteredConfigFiles_2=filteredConfigFiles;_i<filteredConfigFiles_2.length;_i++){var cf=filteredConfigFiles_2[_i];try{var t=JSON.parse(fs.readFileSync(cf));var basedir=path.dirname(path.resolve(cf));for(var k in t){t[k]["_cwd"]=basedir}tasks=Object.assign(tasks,t);configFiles.push(cf);console.log("Loaded config: ".green+cf.bold);c++}catch(e){console.log("Couldn't parse ".red+cf.bold+" config file".red)}}if(c==0){console.log("Couldn't load any config file.\nTerminating...".red)}currentConfig=tasks;for(var k_1 in tasks){if(taskFilter.length>0&&taskFilter.indexOf(k_1)<0)continue;if(taskFilter.length==0&&tasks.hasOwnProperty("run")&&!tasks["run"])continue;runTask(k_1)}}function hahdleInput(data){var chunk;var o;while((chunk=process.stdin.read())!==null){if(o=/^(run|stop) (.+)/m.exec(chunk)){switch(o[1]){case"run":runTask(o[2]);break;case"stop":stopTask(o[2]);break}}}}for(var _a=0,filteredConfigFiles_1=filteredConfigFiles;_a<filteredConfigFiles_1.length;_a++){cf=filteredConfigFiles_1[_a];fs.watchFile(cf,{presistent:true,recursive:true},reloadTasks)}loadTasks();process.stdin.resume();process.stdin.on("readable",hahdleInput);